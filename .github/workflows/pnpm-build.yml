# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"

env:
  STORYBOOK_ARTIFACT: storybook-artifact
  STORYBOOK_OUT: storybook-static

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
    - uses: actions/checkout@v4
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install
    - name: ESLint Style and Code Faults
      run: pnpm lint
    - name: Build Project
      run: pnpm build
    - name: Build Storybook
      if: github.ref == 'refs/heads/main'
      run: pnpm build-storybook
    - name: Upload Storybook Pages Artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        name: ${{ STORYBOOK_ARTIFACT }}
        path: ${{ STORYBOOK_OUT }}

  deploy-storybook:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifact_name: ${{ STORYBOOK_ARTIFACT }}
